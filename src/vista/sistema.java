/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import com.itextpdf.text.pdf.PdfWriter;
import Control.database;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Image;
import com.itextpdf.text.Rectangle;
import com.itextpdf.text.pdf.Barcode128;
import java.awt.ComponentOrientation;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.Instant;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.RowSorter.SortKey;
import javax.swing.SortOrder;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import modelo.Compra;
import modelo.CompraDB;
import modelo.Derivados;
import modelo.DerivadosDB;
import modelo.DetalleCompra;
import modelo.DetalleVenta;
import modelo.Productos;
import modelo.ProductosDB;
import modelo.Unidades;
import modelo.UnidadesDB;
import modelo.Venta;
import modelo.VentaDB;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;



/**
 *
 * @author yopri
 */
public class sistema extends javax.swing.JFrame {

    /**
     * Creates new form sistema
     */
    Productos pro = new Productos();
    ProductosDB pdb = new ProductosDB();
    Derivados der = new Derivados();
    DerivadosDB ddb = new DerivadosDB();
    Unidades uni = new Unidades();
    UnidadesDB udb = new UnidadesDB();
    DefaultTableModel modelo = new DefaultTableModel();
    TableRowSorter trs = new TableRowSorter();
    ArrayList codigosG = new ArrayList();
    ArrayList codigosU = new ArrayList();
    Compra c = new Compra();
    CompraDB cdb = new CompraDB();
    DetalleCompra cd = new DetalleCompra();
    Venta v = new Venta();
    VentaDB vdb = new VentaDB();
    DetalleVenta vd = new DetalleVenta();
    int item;
    int itemv;
    float totalpagar;
    float totalventa;
    float totalreporte;
    DefaultTableModel tmp;
    DefaultTableModel tmv;
    String cdUnidad;
    float base;
    String codePV;
    ArrayList <Unidades> u = new ArrayList();
    ArrayList <Derivados> d = new ArrayList();
    DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");
    DateTimeFormatter dtf2 = DateTimeFormatter.ofPattern("dd/MM/yyyy");
    int udmCaja;
    public sistema() {
        initComponents();
        //this.setResizable(false);
        String rol;
        this.setLocationRelativeTo(null);
        setSize(1024, 740);
        Toolkit tk=Toolkit.getDefaultToolkit();
        Dimension d=tk.getScreenSize();
        setLocation((d.width-getSize().width)/2,(d.height-getSize().height)/2);
        jlbFecha.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);
        jlbUsuario.setText(""+database.name);
        jlbRol.setText(""+rol());
        if(database.rol==0){
         btnAdministrar.setEnabled(false);
         btnAgregar.setEnabled(false);
         btnEditar.setEnabled(false);
         btnEliminar.setEnabled(false);
         btnLimpiar.setEnabled(false);
         btnAgregarG.setEnabled(false);
         btnEditarG.setEnabled(false);
         btnEliminarG.setEnabled(false);
         btnAgregarU.setEnabled(false);
         btnEditarU.setEnabled(false);
         btnEliminarU.setEnabled(false);
         btnCompras.setEnabled(false);
         btnAdministrar.setEnabled(false);
        }
      
        jtfCodigo.requestFocus();
        jtfBase.setText("1");
        jtfBase.setEnabled(false);
        
        cajas();
        
        
        jlbFecha.setText(""+dtf2.format(LocalDateTime.now()));
        jtfBase.setVisible(false);
        jcbBase.setVisible(false);
        
        setIconImage(new ImageIcon(getClass().getResource("/img/candy16.png")).getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jPanel8 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        btnProductos = new javax.swing.JButton();
        btnVentas = new javax.swing.JButton();
        btnCompras = new javax.swing.JButton();
        btnAdministrar = new javax.swing.JButton();
        btnReportes = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jlbRol = new javax.swing.JLabel();
        btnCombos = new javax.swing.JButton();
        jlbUsuario = new javax.swing.JLabel();
        btnUnidades = new javax.swing.JButton();
        jlbFecha = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jtp = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jtfCodigoPV = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        jtfCantidadPV = new javax.swing.JTextField();
        jLabel39 = new javax.swing.JLabel();
        jtfPrecioPV = new javax.swing.JTextField();
        btnAgregarPV = new javax.swing.JButton();
        btnEliminarPV = new javax.swing.JButton();
        btnVenderPV = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jtVenta = new javax.swing.JTable();
        jtfTotalPV = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        jcbOpciones = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jtfCodigo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jtfNombre = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jtfDetalle = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jcbUnidad = new javax.swing.JComboBox<>();
        jtfPrecio = new javax.swing.JTextField();
        jtfBase = new javax.swing.JTextField();
        jcbBase = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        btnAgregar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtableP = new javax.swing.JTable();
        jLabel15 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jtfStockP = new javax.swing.JTextField();
        jtfPiezasP = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        btnLimpiar = new javax.swing.JButton();
        btnCodigoP = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jtfPrecioD = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jtfDetalleD = new javax.swing.JTextField();
        jtfCodigoD = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jtfNombreD = new javax.swing.JTextField();
        btnAgregarG = new javax.swing.JButton();
        btnEditarG = new javax.swing.JButton();
        btnEliminarG = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtableD = new javax.swing.JTable();
        jLabel18 = new javax.swing.JLabel();
        jcbProductos = new javax.swing.JComboBox<>();
        btnLimpiarD = new javax.swing.JButton();
        btnCodigoG = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jcbProductosU = new javax.swing.JComboBox<>();
        jLabel26 = new javax.swing.JLabel();
        jtfCodigoU = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jtfNombreU = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jtfDetalleU = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jtfPrecioU = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jtfPiezasU = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        jtUnidades = new javax.swing.JTable();
        btnAgregarU = new javax.swing.JButton();
        btnEditarU = new javax.swing.JButton();
        btnEliminarU = new javax.swing.JButton();
        btnLimpiarU = new javax.swing.JButton();
        btnCodigoU = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jtfPrecioC = new javax.swing.JTextField();
        jtfCantidadC = new javax.swing.JTextField();
        btnAgregarC = new javax.swing.JButton();
        jtfEliminarC = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtCompra = new javax.swing.JTable();
        bntRegC = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        jtfNombreC = new javax.swing.JTextField();
        jtfCodigoC = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jtfTotalC = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        jtcDesde = new com.toedter.calendar.JDateChooser();
        jLabel41 = new javax.swing.JLabel();
        jtcTill = new com.toedter.calendar.JDateChooser();
        jLabel42 = new javax.swing.JLabel();
        btnBuscarVentas = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        jtReportes = new javax.swing.JTable();
        jcbTipo = new javax.swing.JComboBox<>();
        jLabel43 = new javax.swing.JLabel();
        jtfTotalR = new javax.swing.JTextField();
        jlbSeccion1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        jMenu3.setText("File");
        jMenuBar2.add(jMenu3);

        jMenu4.setText("Edit");
        jMenuBar2.add(jMenu4);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnProductos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/candy.png"))); // NOI18N
        btnProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProductosActionPerformed(evt);
            }
        });
        jPanel1.add(btnProductos, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 30, 110, -1));

        btnVentas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/venta.png"))); // NOI18N
        btnVentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVentasActionPerformed(evt);
            }
        });
        jPanel1.add(btnVentas, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 110, -1));

        btnCompras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/bienes.png"))); // NOI18N
        btnCompras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnComprasActionPerformed(evt);
            }
        });
        jPanel1.add(btnCompras, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 30, 110, -1));

        btnAdministrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/apoyo.png"))); // NOI18N
        btnAdministrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdministrarActionPerformed(evt);
            }
        });
        jPanel1.add(btnAdministrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 30, 110, -1));

        btnReportes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/reporte.png"))); // NOI18N
        btnReportes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReportesActionPerformed(evt);
            }
        });
        jPanel1.add(btnReportes, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 30, 110, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Usuario:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Rol:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 10, -1, -1));

        jlbRol.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jlbRol.setText("rol");
        jPanel1.add(jlbRol, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 10, 190, -1));

        btnCombos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/bascula.png"))); // NOI18N
        btnCombos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCombosActionPerformed(evt);
            }
        });
        jPanel1.add(btnCombos, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 30, 110, -1));

        jlbUsuario.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jlbUsuario.setText("usuario");
        jPanel1.add(jlbUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 10, 120, -1));

        btnUnidades.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/dulce.png"))); // NOI18N
        btnUnidades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUnidadesActionPerformed(evt);
            }
        });
        jPanel1.add(btnUnidades, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 30, 110, -1));

        jlbFecha.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jlbFecha.setText("fecha");
        jPanel1.add(jlbFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 10, 164, -1));

        jLabel8.setText("Administración");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 70, -1, -1));

        jLabel9.setText("Ventas");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 70, -1, -1));

        jLabel34.setText("Productos");
        jPanel1.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 70, -1, -1));

        jLabel37.setText("Granel");
        jPanel1.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 70, -1, -1));

        jLabel44.setText("Individual");
        jPanel1.add(jLabel44, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 70, -1, -1));

        jLabel45.setText("Compras");
        jPanel1.add(jLabel45, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 70, -1, -1));

        jLabel46.setText("Reportes");
        jPanel1.add(jLabel46, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 70, -1, -1));

        jPanel8.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 1220, 90));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/cerrar-sesion.png"))); // NOI18N
        jButton2.setText("Salir");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel8.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 660, 150, -1));

        jtp.setBackground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel35.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel35.setText("Ventas");
        jPanel3.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 40, -1, -1));

        jLabel36.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel36.setText("Codigo");
        jPanel3.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, -1));

        jtfCodigoPV.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jtfCodigoPV.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfCodigoPVKeyPressed(evt);
            }
        });
        jPanel3.add(jtfCodigoPV, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 260, -1));

        jLabel38.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel38.setText("Cantidad");
        jPanel3.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, -1, -1));

        jtfCantidadPV.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jtfCantidadPV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfCantidadPVActionPerformed(evt);
            }
        });
        jtfCantidadPV.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfCantidadPVKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfCantidadPVKeyTyped(evt);
            }
        });
        jPanel3.add(jtfCantidadPV, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, 260, -1));

        jLabel39.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel39.setText("Total:");
        jPanel3.add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 490, -1, -1));

        jtfPrecioPV.setEditable(false);
        jtfPrecioPV.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel3.add(jtfPrecioPV, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 260, -1));

        btnAgregarPV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/mas32.png"))); // NOI18N
        btnAgregarPV.setText("Agregar");
        btnAgregarPV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarPVActionPerformed(evt);
            }
        });
        jPanel3.add(btnAgregarPV, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 350, 260, -1));

        btnEliminarPV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/eliminar32.png"))); // NOI18N
        btnEliminarPV.setText("Eliminar");
        btnEliminarPV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarPVActionPerformed(evt);
            }
        });
        jPanel3.add(btnEliminarPV, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 400, 260, -1));

        btnVenderPV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/verificar32.png"))); // NOI18N
        btnVenderPV.setText("Vender");
        btnVenderPV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVenderPVActionPerformed(evt);
            }
        });
        jPanel3.add(btnVenderPV, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 450, 260, -1));

        jtVenta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nombre", "Cantidad", "Precio", "Subtotal"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(jtVenta);

        jPanel3.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 50, 690, 420));

        jtfTotalPV.setEditable(false);
        jtfTotalPV.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jtfTotalPV.setForeground(new java.awt.Color(153, 0, 0));
        jtfTotalPV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfTotalPVActionPerformed(evt);
            }
        });
        jPanel3.add(jtfTotalPV, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 490, 220, -1));

        jLabel40.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel40.setText("Precio");
        jPanel3.add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, -1, -1));

        jcbOpciones.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jcbOpciones.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbOpcionesItemStateChanged(evt);
            }
        });
        jPanel3.add(jcbOpciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 260, -1));

        jtp.addTab("0", jPanel3);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jtfCodigo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfCodigoActionPerformed(evt);
            }
        });
        jtfCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfCodigoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfCodigoKeyTyped(evt);
            }
        });
        jPanel2.add(jtfCodigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 200, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Nombre");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, -1));

        jtfNombre.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfNombreKeyPressed(evt);
            }
        });
        jPanel2.add(jtfNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 200, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Detalle");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, -1, -1));

        jtfDetalle.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfDetalle.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfDetalleKeyPressed(evt);
            }
        });
        jPanel2.add(jtfDetalle, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 200, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Unidad de medida");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, -1, -1));

        jcbUnidad.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbUnidad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "Kg - Kilogramo", "U - Unidad" }));
        jcbUnidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbUnidadActionPerformed(evt);
            }
        });
        jcbUnidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jcbUnidadKeyPressed(evt);
            }
        });
        jPanel2.add(jcbUnidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, 200, -1));

        jtfPrecio.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfPrecio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfPrecioKeyPressed(evt);
            }
        });
        jPanel2.add(jtfPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, 200, -1));

        jtfBase.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfBaseKeyPressed(evt);
            }
        });
        jPanel2.add(jtfBase, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 510, 125, -1));

        jcbBase.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jcbBaseStateChanged(evt);
            }
        });
        jcbBase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbBaseActionPerformed(evt);
            }
        });
        jPanel2.add(jcbBase, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 480, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Codigo");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));

        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/mas.png"))); // NOI18N
        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });
        jPanel2.add(btnAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 480, 120, -1));

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/editar.png"))); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.setMaximumSize(new java.awt.Dimension(99, 33));
        btnEditar.setMinimumSize(new java.awt.Dimension(99, 33));
        btnEditar.setPreferredSize(new java.awt.Dimension(99, 33));
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        jPanel2.add(btnEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 480, 120, -1));

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/eliminar.png"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.setMaximumSize(new java.awt.Dimension(99, 33));
        btnEliminar.setMinimumSize(new java.awt.Dimension(99, 33));
        btnEliminar.setPreferredSize(new java.awt.Dimension(99, 33));
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jPanel2.add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 480, 120, -1));

        jtableP.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtableP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nombre", "Detalle", "UDM", "Precio", "Stock", "Piezas"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Float.class, java.lang.Float.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtableP.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        jtableP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtablePMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtableP);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 40, 760, 420));

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setText("Productos");
        jPanel2.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 10, -1, -1));

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel21.setText("Stock");
        jPanel2.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 340, -1, -1));

        jLabel31.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel31.setText("Precio");
        jPanel2.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, -1, -1));

        jtfStockP.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfStockP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfStockPKeyPressed(evt);
            }
        });
        jPanel2.add(jtfStockP, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, 200, -1));

        jtfPiezasP.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfPiezasP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfPiezasPKeyPressed(evt);
            }
        });
        jPanel2.add(jtfPiezasP, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 420, 200, -1));

        jLabel32.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel32.setText("Piezas");
        jPanel2.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 400, -1, -1));

        btnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/escoba.png"))); // NOI18N
        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });
        jPanel2.add(btnLimpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 480, 120, -1));

        btnCodigoP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/codigo-de-barras.png"))); // NOI18N
        btnCodigoP.setText("Codigos");
        btnCodigoP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCodigoPActionPerformed(evt);
            }
        });
        jPanel2.add(btnCodigoP, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 480, 120, -1));

        jtp.addTab("1", jPanel2);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setText("Producto");
        jPanel4.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, -1, -1));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setText("Precio");
        jPanel4.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, -1, -1));

        jtfPrecioD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfPrecioDKeyPressed(evt);
            }
        });
        jPanel4.add(jtfPrecioD, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 330, 210, -1));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setText("Codigo granel");
        jPanel4.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, -1));

        jtfDetalleD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfDetalleDKeyPressed(evt);
            }
        });
        jPanel4.add(jtfDetalleD, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 210, -1));

        jtfCodigoD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfCodigoDKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfCodigoDKeyReleased(evt);
            }
        });
        jPanel4.add(jtfCodigoD, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 210, -1));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("Detalle");
        jPanel4.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, -1, -1));

        jtfNombreD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfNombreDKeyPressed(evt);
            }
        });
        jPanel4.add(jtfNombreD, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 210, -1));

        btnAgregarG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/mas.png"))); // NOI18N
        btnAgregarG.setText("Agregar");
        btnAgregarG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarGActionPerformed(evt);
            }
        });
        jPanel4.add(btnAgregarG, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 480, 120, -1));

        btnEditarG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/editar.png"))); // NOI18N
        btnEditarG.setText("Editar");
        btnEditarG.setMaximumSize(new java.awt.Dimension(99, 33));
        btnEditarG.setMinimumSize(new java.awt.Dimension(99, 33));
        btnEditarG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarGActionPerformed(evt);
            }
        });
        jPanel4.add(btnEditarG, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 480, 120, -1));

        btnEliminarG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/eliminar.png"))); // NOI18N
        btnEliminarG.setText("Eliminar");
        btnEliminarG.setMaximumSize(new java.awt.Dimension(99, 33));
        btnEliminarG.setMinimumSize(new java.awt.Dimension(99, 33));
        btnEliminarG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarGActionPerformed(evt);
            }
        });
        jPanel4.add(btnEliminarG, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 480, 120, -1));

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel17.setText("Granel");
        jPanel4.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 40, -1, -1));

        jtableD.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtableD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo granel", "Nombre granel", "Detalle", "Precio", "Codigo", "Nombre"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtableD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtableDMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jtableD);

        jPanel4.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 50, 740, 410));

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel18.setText("Nombre granel");
        jPanel4.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, -1, -1));

        jcbProductos.setEditable(true);
        jcbProductos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbProductosItemStateChanged(evt);
            }
        });
        jcbProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbProductosActionPerformed(evt);
            }
        });
        jcbProductos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jcbProductosKeyPressed(evt);
            }
        });
        jPanel4.add(jcbProductos, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 400, 210, -1));

        btnLimpiarD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/escoba.png"))); // NOI18N
        btnLimpiarD.setText("Limpiar");
        btnLimpiarD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarDActionPerformed(evt);
            }
        });
        jPanel4.add(btnLimpiarD, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 480, 120, -1));

        btnCodigoG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/codigo-de-barras.png"))); // NOI18N
        btnCodigoG.setText("Codigos");
        btnCodigoG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCodigoGActionPerformed(evt);
            }
        });
        jPanel4.add(btnCodigoG, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 480, 120, -1));

        jtp.addTab("2", jPanel4);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel24.setText("Individual");
        jPanel6.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, -1, -1));

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel25.setText("Producto");
        jPanel6.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 400, -1, -1));

        jcbProductosU.setEditable(true);
        jcbProductosU.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbProductosUItemStateChanged(evt);
            }
        });
        jcbProductosU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbProductosUActionPerformed(evt);
            }
        });
        jcbProductosU.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jcbProductosUKeyPressed(evt);
            }
        });
        jPanel6.add(jcbProductosU, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 430, 200, -1));

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel26.setText("Codigo unidad");
        jPanel6.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, -1));
        jPanel6.add(jtfCodigoU, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 200, -1));

        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel27.setText("Nombre unidad");
        jPanel6.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, -1, -1));

        jtfNombreU.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfNombreUKeyPressed(evt);
            }
        });
        jPanel6.add(jtfNombreU, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 200, -1));

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel28.setText("Detalle");
        jPanel6.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, -1, -1));

        jtfDetalleU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfDetalleUActionPerformed(evt);
            }
        });
        jtfDetalleU.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfDetalleUKeyPressed(evt);
            }
        });
        jPanel6.add(jtfDetalleU, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 200, -1));

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel29.setText("Precio");
        jPanel6.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 330, -1, -1));

        jtfPrecioU.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfPrecioUKeyPressed(evt);
            }
        });
        jPanel6.add(jtfPrecioU, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 360, 200, -1));

        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel30.setText("Piezas");
        jPanel6.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, -1, -1));

        jtfPiezasU.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfPiezasUKeyPressed(evt);
            }
        });
        jPanel6.add(jtfPiezasU, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, 200, -1));

        jtUnidades.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtUnidades.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo Unidad", "Nombre Unidad", "Detalle", "Piezas Contenidas", "Precio", "Codigo", "Nombre"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Float.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtUnidades.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtUnidadesMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jtUnidades);

        jPanel6.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 50, 750, 410));

        btnAgregarU.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/mas.png"))); // NOI18N
        btnAgregarU.setText("Agregar");
        btnAgregarU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarUActionPerformed(evt);
            }
        });
        jPanel6.add(btnAgregarU, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 480, 120, -1));

        btnEditarU.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/editar.png"))); // NOI18N
        btnEditarU.setText("Editar");
        btnEditarU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarUActionPerformed(evt);
            }
        });
        jPanel6.add(btnEditarU, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 480, 120, -1));

        btnEliminarU.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/eliminar.png"))); // NOI18N
        btnEliminarU.setText("Elimiinar");
        btnEliminarU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarUActionPerformed(evt);
            }
        });
        jPanel6.add(btnEliminarU, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 480, 120, -1));

        btnLimpiarU.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/escoba.png"))); // NOI18N
        btnLimpiarU.setText("Limpiar");
        btnLimpiarU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarUActionPerformed(evt);
            }
        });
        jPanel6.add(btnLimpiarU, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 480, 120, -1));

        btnCodigoU.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/codigo-de-barras.png"))); // NOI18N
        btnCodigoU.setText("Codigos");
        btnCodigoU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCodigoUActionPerformed(evt);
            }
        });
        jPanel6.add(btnCodigoU, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 480, 120, -1));

        jtp.addTab("3", jPanel6);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel19.setText("Compras");
        jPanel5.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 30, -1, -1));

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel14.setText("Total:");
        jPanel5.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 480, -1, -1));

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel16.setText("Codigo");
        jPanel5.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, -1, -1));

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel20.setText("Cantidad");
        jPanel5.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 200, -1, -1));

        jtfPrecioC.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jtfPrecioC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfPrecioCKeyPressed(evt);
            }
        });
        jPanel5.add(jtfPrecioC, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 300, 260, -1));

        jtfCantidadC.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jtfCantidadC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfCantidadCKeyPressed(evt);
            }
        });
        jPanel5.add(jtfCantidadC, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, 260, -1));

        btnAgregarC.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/mas32.png"))); // NOI18N
        btnAgregarC.setText("Agregar");
        btnAgregarC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarCActionPerformed(evt);
            }
        });
        jPanel5.add(btnAgregarC, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 340, 260, -1));

        jtfEliminarC.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/eliminar32.png"))); // NOI18N
        jtfEliminarC.setText("Eliminar");
        jtfEliminarC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfEliminarCActionPerformed(evt);
            }
        });
        jPanel5.add(jtfEliminarC, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 390, 260, -1));

        jtCompra.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtCompra.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nombre", "Cantidad", "Precio", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jtCompra);

        jPanel5.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 50, 650, 410));

        bntRegC.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/verificar32.png"))); // NOI18N
        bntRegC.setText("Compra");
        bntRegC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntRegCActionPerformed(evt);
            }
        });
        jPanel5.add(bntRegC, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 440, 260, -1));

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel22.setText("Nombre");
        jPanel5.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, -1, -1));

        jtfNombreC.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel5.add(jtfNombreC, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 160, 260, -1));

        jtfCodigoC.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jtfCodigoC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfCodigoCKeyPressed(evt);
            }
        });
        jPanel5.add(jtfCodigoC, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, 260, -1));

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel23.setText("Precio");
        jPanel5.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 270, -1, -1));

        jtfTotalC.setEditable(false);
        jtfTotalC.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jtfTotalC.setForeground(new java.awt.Color(204, 0, 0));
        jPanel5.add(jtfTotalC, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 470, 170, -1));

        jtp.addTab("4", jPanel5);

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel33.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel33.setText("Reportes");
        jPanel7.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 20, -1, -1));
        jPanel7.add(jtcDesde, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, 220, -1));

        jLabel41.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel41.setText("Desde");
        jPanel7.add(jLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, -1, -1));
        jPanel7.add(jtcTill, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 80, 200, -1));

        jLabel42.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel42.setText("Total:");
        jPanel7.add(jLabel42, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 490, -1, -1));

        btnBuscarVentas.setText("Buscar");
        btnBuscarVentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarVentasActionPerformed(evt);
            }
        });
        jPanel7.add(btnBuscarVentas, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 80, -1, -1));

        jtReportes.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtReportes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Vendedor", "Fecha", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(jtReportes);

        jPanel7.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 130, 940, 330));

        jcbTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ventas", "Compras" }));
        jcbTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbTipoActionPerformed(evt);
            }
        });
        jPanel7.add(jcbTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 80, 160, -1));

        jLabel43.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel43.setText("Hasta");
        jPanel7.add(jLabel43, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 50, -1, -1));

        jtfTotalR.setEditable(false);
        jtfTotalR.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jPanel7.add(jtfTotalR, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 480, 180, -1));

        jtp.addTab("5", jPanel7);

        jPanel8.add(jtp, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 1220, 560));

        jlbSeccion1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jlbSeccion1.setForeground(new java.awt.Color(51, 102, 255));
        jlbSeccion1.setText("Dulceria Mayta");
        jPanel8.add(jlbSeccion1, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 0, 220, -1));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/azul_back.jpg"))); // NOI18N
        jPanel8.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1190, 700));

        getContentPane().add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1050, 700));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jcbTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbTipoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbTipoActionPerformed

    private void btnBuscarVentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarVentasActionPerformed
        // TODO add your handling code here:
        String from;
        String till;
        String pattern  = "yyyy-MM-dd";
        DateFormat formatter = new SimpleDateFormat(pattern);
        from = formatter.format(jtcDesde.getDate())+" 00:00:00";
        till = formatter.format(jtcTill.getDate())+" 23:59:59";
        LimpiarTable();
        if(jcbTipo.getSelectedIndex()==0){
            try {
                ListarVentas(from,till);
                TotalR();
            } catch (SQLException ex) {
                Logger.getLogger(sistema.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else{
            try {
                ListarCompras(from,till);
                TotalR();
            } catch (SQLException ex) {
                Logger.getLogger(sistema.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

    }//GEN-LAST:event_btnBuscarVentasActionPerformed

    private void jtfCodigoCKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfCodigoCKeyPressed
        // TODO add your handling code her
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            if(!"".equals(jtfCodigoC.getText())){
                String cod = jtfCodigoC.getText();
                pro = pdb.BuscarPro(cod);
                if (pro.getName() != null) {
                    jtfNombreC.setText(""+pro.getName());
                    jtfCantidadC.requestFocus();
                }
                else{
                    LimpiarCompra();
                    jtfCodigoC.requestFocus();
                }
            }else{
                JOptionPane.showMessageDialog(null, "Ingrese el codigo de producto");
                jtfCodigoC.requestFocus();
            }

        }
    }//GEN-LAST:event_jtfCodigoCKeyPressed

    private void bntRegCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntRegCActionPerformed
        // TODO add your handling code here:
        RegistrarCompra();
        RegistrarDetalleC();
        ActualizarStock();
        LimpiarCompra();
        LimpiarTableC();
    }//GEN-LAST:event_bntRegCActionPerformed

    private void jtfEliminarCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfEliminarCActionPerformed
        // TODO add your handling code here:
        tmp = (DefaultTableModel) jtCompra.getModel();
        tmp.removeRow(jtCompra.getSelectedRow());
        Total();
        jtfCodigoC.requestFocus();
    }//GEN-LAST:event_jtfEliminarCActionPerformed

    private void btnAgregarCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarCActionPerformed
        // TODO add your handling code here:
        //AGREGAR DATOS DEL PRODUCTO COMPRADO A LA TABLA Y DESPUES REGISTRAR VENTA
        if(!jtfCantidadC.getText().equals("")){
            String cod = jtfCodigoC.getText();
            String nombre = jtfNombreC.getText();
            float cant = Float.parseFloat(jtfCantidadC.getText());
            float precio = Float.parseFloat(jtfPrecioC.getText());
            float total = precio * cant;
            item = item +1;
            tmp = (DefaultTableModel) jtCompra.getModel();
            for (int i = 0; i < jtCompra.getRowCount(); i++) {
                if (jtCompra.getValueAt(i, 0).equals(jtfCodigoC.getText())) {
                    JOptionPane.showMessageDialog(null, "El producto ya esta registrado");
                    LimpiarCompra();
                    jtfCodigoC.requestFocus();
                    return;
                }
            }
            ArrayList lista = new ArrayList();
            lista.add(item);
            lista.add(cod);
            lista.add(nombre);
            lista.add(cant);
            lista.add(precio);
            lista.add(total);
            Object[] o = new Object[5];
            o[0]= lista.get(1);
            o[1]= lista.get(2);
            o[2]= lista.get(3);
            o[3]= lista.get(4);
            o[4]= lista.get(5);
            tmp.addRow(o);
            jtCompra.setModel(tmp);
            LimpiarCompra();
            Total();
            jtfCodigoC.requestFocus();
        }
        else{
            JOptionPane.showMessageDialog(null, "Ingresa la cantidad");
        }
    }//GEN-LAST:event_btnAgregarCActionPerformed

    private void jtfCantidadCKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfCantidadCKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jtfPrecioC.requestFocus();
        }
    }//GEN-LAST:event_jtfCantidadCKeyPressed

    private void jtfPrecioCKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfPrecioCKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btnAgregarC.doClick();
        }
    }//GEN-LAST:event_jtfPrecioCKeyPressed

    private void btnEliminarUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarUActionPerformed
        // TODO add your handling code here:
        if(!"".equals(jtfCodigoU.getText())){
            int pregunta = JOptionPane.showConfirmDialog(null, "¿Estas seguro que desea eliminar este producto?");
            if (pregunta==0) {
                String id = jtfCodigoU.getText();
                udb.eliminarU(id);
                JOptionPane.showMessageDialog(null, "Producto elminado");
                LimpiarTable();
                LimpiarUnidades();
                try {
                    ListarUnidades();
                } catch (SQLException ex) {
                    Logger.getLogger(sistema.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_btnEliminarUActionPerformed

    private void btnEditarUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarUActionPerformed
        // TODO add your handling code here:
        int resultado=0;
        int pregunta = JOptionPane.showConfirmDialog(null, "¿Estas seguro que desea editar este producto?");
            if (pregunta==0) {
        if(!"".equals(jcbProductosU.getSelectedItem())){
            uni.setNombre(String.valueOf(jcbProductosU.getSelectedItem()));
            uni.setCodigo(""+codigosU.get(jcbProductosU.getSelectedIndex()));

        }
        else{
            JOptionPane.showMessageDialog(this, "Seleccione un producto base");
            resultado =1;
        }

        if(Numeros(jtfCodigoU.getText())){
            uni.setCdunidad(jtfCodigoU.getText());
        }
        else{
            JOptionPane.showMessageDialog(this, "Ingrese solo valores numericos como codigo de unidad");
            resultado =1;
        }
        if(("").equals(jtfNombreU.getText())){
            JOptionPane.showMessageDialog(this, "Ingrese un nombre para el derivado");
            resultado =1;
        }
        else{
            uni.setNunidad(jtfNombreU.getText());
        }
        if(Numeros(jtfPrecioU.getText())){
            if(!jtfPrecioU.getText().equals("")){
                uni.setPreciou(Float.parseFloat(jtfPrecioU.getText()));
            }
        }
        else{
            JOptionPane.showMessageDialog(this, "Ingrese un precio correcto");
            resultado =1;
        }
        uni.setDetalleu(jtfDetalleU.getText());
        if(Numeros(jtfPiezasU.getText())){
            if(!jtfPiezasU.getText().equals("")){
                uni.setPiezas(Integer.parseInt(jtfPiezasU.getText()));
            }
        }
        else{
            JOptionPane.showMessageDialog(this, "Ingrese piezas del producto");
            resultado =1;
        }
        if(resultado==0){
            boolean res = udb.editarU(uni);
            if(res){
                JOptionPane.showMessageDialog(this, "Individual editado correctamente");
                LimpiarTable();
                LimpiarUnidades();
                try {
                    ListarUnidades();
                } catch (SQLException ex) {
                    Logger.getLogger(sistema.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else{
                JOptionPane.showMessageDialog(this, "Este producto ya esta registrado");
            }
        }
            }
    }//GEN-LAST:event_btnEditarUActionPerformed

    private void btnAgregarUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarUActionPerformed
        // TODO add your handling code here:
        int resultado=0;
        uni = new Unidades();
        if(!"".equals(jcbProductosU.getSelectedItem())){
            uni.setNombre(String.valueOf(jcbProductosU.getSelectedItem()));
            uni.setCodigo(""+codigosU.get(jcbProductosU.getSelectedIndex()));

        }
        else{
            JOptionPane.showMessageDialog(this, "Seleccione un producto base");
            resultado =1;
        }

        if(Numeros(jtfCodigoU.getText())){
            uni.setCdunidad(jtfCodigoU.getText());
        }
        else{
            JOptionPane.showMessageDialog(this, "Ingrese solo valores numericos como codigo de unidad");
            resultado =1;
        }
        if(("").equals(jtfNombreU.getText())){
            JOptionPane.showMessageDialog(this, "Ingrese un nombre para el producto individual");
            resultado =1;
        }
        else{
            uni.setNunidad(jtfNombreU.getText());
        }
        if(Numeros(jtfPrecioU.getText())){
            if(!jtfPrecioU.getText().equals("")){
                uni.setPreciou(Float.parseFloat(jtfPrecioU.getText()));
            }
        }
        else{
            JOptionPane.showMessageDialog(this, "Ingrese un precio correcto");
            resultado =1;
        }
        uni.setDetalleu(jtfDetalleU.getText());
        if(Numeros(jtfPiezasU.getText())){
            if(!jtfPiezasU.getText().equals("")){
                uni.setPiezas(Integer.parseInt(jtfPiezasU.getText()));
            }
        }
        else{
            JOptionPane.showMessageDialog(this, "Ingrese piezas del producto");
            resultado =1;
        }
        if(resultado==0){
                   if(pdb.BuscarPro(uni.getCdunidad()).getCd()!=null || pdb.BuscarDer(uni.getCdunidad()).getCderivado()!=null){
                 JOptionPane.showMessageDialog(this, "Este producto ya esta registrado");
            }else{
            boolean res = udb.agregarU(uni);
            if(res){
                JOptionPane.showMessageDialog(this, "Individual agregado correctamente");
                LimpiarTable();
                LimpiarUnidades();
                try {
                    ListarUnidades();
                } catch (SQLException ex) {
                    Logger.getLogger(sistema.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else{
                JOptionPane.showMessageDialog(this, "Este producto ya esta registrado");
            }
                   }
        }
    }//GEN-LAST:event_btnAgregarUActionPerformed

    private void jtUnidadesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtUnidadesMouseClicked
        // TODO add your handling code here:
        int fila = jtUnidades.rowAtPoint(evt.getPoint());

        jtfCodigoU.setText(jtUnidades.getValueAt(fila, 0).toString());
        jtfNombreU.setText(jtUnidades.getValueAt(fila, 1).toString());
        jtfDetalleU.setText(jtUnidades.getValueAt(fila, 2).toString());
        jtfPiezasU.setText(jtUnidades.getValueAt(fila, 3).toString());
        jtfPrecioU.setText(jtUnidades.getValueAt(fila, 4).toString());
        jcbProductosU.setSelectedItem(jtUnidades.getValueAt(fila, 6).toString());
        
    }//GEN-LAST:event_jtUnidadesMouseClicked

    private void jtfDetalleUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfDetalleUActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfDetalleUActionPerformed

    private void jcbProductosUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbProductosUActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbProductosUActionPerformed

    private void jcbProductosUItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbProductosUItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbProductosUItemStateChanged

    private void jcbProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbProductosActionPerformed
        // TODO add your handling code here:
      
    }//GEN-LAST:event_jcbProductosActionPerformed

    private void jcbProductosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbProductosItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbProductosItemStateChanged

    private void jtableDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtableDMouseClicked
        // TODO add your handling code here:
        int fila = jtableD.rowAtPoint(evt.getPoint());
               jtfCodigoD.setText(jtableD.getValueAt(fila,0).toString());
        jtfNombreD.setText(jtableD.getValueAt(fila,1).toString());
        jtfDetalleD.setText(jtableD.getValueAt(fila, 2).toString());
        jtfPrecioD.setText(jtableD.getValueAt(fila,3).toString());
        jcbProductos.setSelectedItem(jtableD.getValueAt(fila,5).toString());
 
    }//GEN-LAST:event_jtableDMouseClicked

    private void btnEliminarGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarGActionPerformed
        // TODO add your handling code here:
        if(!"".equals(jtfCodigoD.getText())){
            int pregunta = JOptionPane.showConfirmDialog(null, "¿Estas seguro que desea eliminar este producto?");
            if (pregunta==0) {
                String id = jtfCodigoD.getText();
                ddb.eliminarD(id);
                JOptionPane.showMessageDialog(null, "Producto eliminado");
                LimpiarTable();
                LimpiarDerivados();
                try {
                    ListarDerivados();
                } catch (SQLException ex) {
                    Logger.getLogger(sistema.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_btnEliminarGActionPerformed

    private void btnEditarGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarGActionPerformed
        // TODO add your handling code here:
        int resultado=0;
        int pregunta = JOptionPane.showConfirmDialog(null, "¿Estas seguro que desea editar este producto?");
            if (pregunta==0) {
        if(!"".equals(jcbProductos.getSelectedItem())){
            der.setNombre(String.valueOf(jcbProductos.getSelectedItem()));
            der.setCd(""+codigosG.get(jcbProductos.getSelectedIndex()));
        }
        else{
            JOptionPane.showMessageDialog(this, "Seleccione un producto base");
            resultado =1;
        }

        if(Numeros(jtfCodigoD.getText())){
            der.setCderivado(jtfCodigoD.getText());

        }
        else{
            JOptionPane.showMessageDialog(this, "Ingrese solo valores numericos como codigo de derivado");
            resultado =1;
        }
        if(("").equals(jtfNombreD.getText())){
            JOptionPane.showMessageDialog(this, "Ingrese un nombre para el derivado");
            resultado =1;
        }
        else{
            der.setNderivado(jtfNombreD.getText());
        }
        if(Numeros(jtfPrecioD.getText())){
            if(!jtfPrecioD.getText().equals("")){
                der.setPrecio(Float.parseFloat(jtfPrecioD.getText()));
            }
        }
        else{
            JOptionPane.showMessageDialog(this, "Ingrese un precio correcto");
            resultado =1;
        }
        der.setDetalled(jtfDetalleD.getText());
        if(resultado==0){
            boolean res = ddb.editarD(der);
            if(res){
                JOptionPane.showMessageDialog(this, "Producto a granel editado correctamente");
                LimpiarTable();
                LimpiarDerivados();
                try {
                    ListarDerivados();
                } catch (SQLException ex) {
                    Logger.getLogger(sistema.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else{
                JOptionPane.showMessageDialog(this, "Este producto ya esta registrado");
            }
        }
            }
    }//GEN-LAST:event_btnEditarGActionPerformed

    private void btnAgregarGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarGActionPerformed
        // TODO add your handling code here:
         int resultado=0;
        try{
       
        der = new Derivados();
        if(!"".equals(jcbProductos.getSelectedItem())){
            der.setNombre(String.valueOf(jcbProductos.getSelectedItem()));
            der.setCd(""+codigosG.get(jcbProductos.getSelectedIndex()));

        }
        else{
            JOptionPane.showMessageDialog(this, "Seleccione un producto");
            resultado =1;
        }
        if(Numeros(jtfCodigoD.getText())){
            der.setCderivado(jtfCodigoD.getText());

        }
        else{
            JOptionPane.showMessageDialog(this, "Ingrese solo valores numericos como codigo de derivado");
            resultado =1;
        }
        if(("").equals(jtfNombreD.getText())){
            JOptionPane.showMessageDialog(this, "Ingrese un nombre para el producto a granel");
            resultado =1;
        }
        else{
            der.setNderivado(jtfNombreD.getText());
        }
        if(Numeros(jtfPrecioD.getText())){
            if(!jtfPrecioD.getText().equals("")){
                der.setPrecio(Float.parseFloat(jtfPrecioD.getText()));
            }
        }
        else{
            JOptionPane.showMessageDialog(this, "Ingrese un precio correcto");
            resultado =1;
        }
        der.setDetalled(jtfDetalleD.getText());
    }catch(Exception e){
            System.out.println(""+e);
}
        if(resultado==0){
              if(pdb.BuscarPro(der.getCderivado()).getCd()!=null || pdb.BuscarUni(der.getCderivado()).getCdunidad()!=null){
                 JOptionPane.showMessageDialog(this, "Este producto ya esta registrado");
            }else{
            boolean res = ddb.agregarD(der);
            if(res){
                JOptionPane.showMessageDialog(this, "Producto a granel agregado correctamente");
                LimpiarTable();
                LimpiarDerivados();
                try {
                    ListarDerivados();
                } catch (SQLException ex) {
                    Logger.getLogger(sistema.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else{
                JOptionPane.showMessageDialog(this, "No existe este producto");
            }
              }
        }
    }//GEN-LAST:event_btnAgregarGActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
        LimpiarProductos();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void jtablePMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtablePMouseClicked
        // TODO add your handling code here:
        int fila = jtableP.rowAtPoint(evt.getPoint());
        jtfCodigo.setText(jtableP.getValueAt(fila, 0).toString());
        jtfNombre.setText(jtableP.getValueAt(fila, 1).toString());
        jtfDetalle.setText(jtableP.getValueAt(fila,2).toString());
        jcbUnidad.setSelectedIndex(Integer.parseInt(jtableP.getValueAt(fila,3).toString()));
        jtfPrecio.setText(jtableP.getValueAt(fila, 4).toString());
        jtfStockP.setText(jtableP.getValueAt(fila, 5).toString());
        jtfPiezasP.setText(jtableP.getValueAt(fila, 6).toString());
    }//GEN-LAST:event_jtablePMouseClicked

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        if(!"".equals(jtfCodigo.getText())){
            int pregunta = JOptionPane.showConfirmDialog(null, "¿Estas seguro que desea eliminar este producto?");
            if (pregunta==0) {
                String id = jtfCodigo.getText();
                pdb.eliminarP(id);
                JOptionPane.showMessageDialog(null, "Producto eliminado");
                LimpiarTable();
                LimpiarProductos();
                try {
                    ListarProductos();
                } catch (SQLException ex) {
                    Logger.getLogger(sistema.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
        int resultado=0;
        float base;
        String cdproducto;
        String nombre;
        String detalle;
        int unidad;
        float precio;
        int pregunta = JOptionPane.showConfirmDialog(null, "¿Estas seguro que desea editar este producto?");
            if (pregunta==0) {
        if(jtableP.getSelectedRowCount()!=0){
        if(Numeros(jtfBase.getText())){
            if(Numeros(jtfBase.getText()) && Float.parseFloat(jtfBase.getText())<=1 && Float.parseFloat(jtfBase.getText())>0){
                base = Float.parseFloat(jtfBase.getText());
                pro.setBase(base);
            }
            else{
                JOptionPane.showMessageDialog(this, "Ingrese solo valores en el rango 0.1Kg - 1Kg");
                resultado =1;
            }
        }
        else{
            JOptionPane.showMessageDialog(this, "Ingrese solo valores numericos como valor base");
            resultado =1;
        }
        if(jtfNombre.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Ingrese un nombre para el producto");
            resultado =1;
        }
        else{
            nombre = jtfNombre.getText();
            pro.setName(nombre);
        }
        if(Numeros(jtfCodigo.getText())){
            if(Float.parseFloat(jtfCodigo.getText())!=0){
                cdproducto = jtfCodigo.getText();
                pro.setCd(cdproducto);
            }
        }
        else{
            JOptionPane.showMessageDialog(this, "El codigo no es valido");
            resultado =1;
        }
        if(jcbUnidad.getSelectedItem().equals("-")){
            JOptionPane.showMessageDialog(this, "Ingrese una unidad de medida");
            resultado =1;
        }
        else{
            unidad = jcbUnidad.getSelectedIndex();
            pro.setUdm(unidad);
        }
        if(Numeros(jtfPrecio.getText())){
            if(!jtfPrecio.getText().equals("")){
                precio = Float.parseFloat(jtfPrecio.getText());
                pro.setPrecio(precio);
            }
        }
        else{
            JOptionPane.showMessageDialog(this, "Ingrese un precio correcto");
            resultado =1;
        }
        detalle = jtfDetalle.getText();
        pro.setDetalle(detalle);
        pro.setStock(Float.parseFloat(jtfStockP.getText()));
        pro.setPiezas(Integer.parseInt(jtfPiezasP.getText()));
        if(resultado==0){
            boolean res = pdb.editarP(pro);
            if(res){
                JOptionPane.showMessageDialog(this, "Producto editado correctamente");
                LimpiarTable();
                LimpiarProductos();
                try {
                    ListarProductos();
                } catch (SQLException ex) {
                    Logger.getLogger(sistema.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else{
                JOptionPane.showMessageDialog(this, "Este producto ya esta registrado");
            }
        }
        }
            }
    
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:
        int resultado=0;
        float base;
        String cdproducto;
        String nombre;
        String detalle;
        int unidad;
        float precio;
        try{
            if(Numeros(jtfBase.getText())){
                if(Numeros(jtfBase.getText()) && Float.parseFloat(jtfBase.getText())<=1 && Float.parseFloat(jtfBase.getText())>0){
                    base = Float.parseFloat(jtfBase.getText());
                    pro.setBase(base);
                }
                else{
                    JOptionPane.showMessageDialog(this, "Ingrese solo valores en el rango 0.1Kg - 1Kg");
                    resultado =1;
                }
            }
            else{
                JOptionPane.showMessageDialog(this, "Ingrese solo valores numericos como valor base");
                resultado =1;
            }
            if(jtfNombre.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, "Ingrese un nombre para el producto");
                resultado =1;
            }
            else{
                nombre = jtfNombre.getText();
                pro.setName(nombre);
            }
            if(Numeros(jtfCodigo.getText())){
                if(Float.parseFloat(jtfCodigo.getText())!=0){
                    cdproducto = jtfCodigo.getText();
                    pro.setCd(cdproducto);
                }
            }
            else{
                JOptionPane.showMessageDialog(this, "El codigo no es valido");
                resultado =1;
            }
            if(jcbUnidad.getSelectedItem().equals("-")){
                JOptionPane.showMessageDialog(this, "Ingrese una unidad de medida");
                resultado =1;
            }
            else{
                unidad = jcbUnidad.getSelectedIndex();
                pro.setUdm(unidad);
            }
            if(Numeros(jtfPrecio.getText())){
                if(!jtfPrecio.getText().equals("")){
                    precio = Float.parseFloat(jtfPrecio.getText());
                    pro.setPrecio(precio);
                }
            }
            else{
                JOptionPane.showMessageDialog(this, "Ingrese un precio correcto");
                resultado =1;
            }
            detalle = jtfDetalle.getText();
            pro.setDetalle(detalle);
            pro.setStock(Float.parseFloat(jtfStockP.getText()));
            pro.setPiezas(Integer.parseInt(jtfPiezasP.getText()));
        }catch(Exception e ){
        }
        if(resultado==0){
      
         if(pdb.BuscarUni(pro.getCd()).getCodigo()!=null || pdb.BuscarDer(pro.getCd()).getCderivado()!=null){
                 JOptionPane.showMessageDialog(this, "Este producto ya esta registrado en otras categorias");
           }else{
            
            boolean res = pdb.agregarP(pro);
            if(res){
                JOptionPane.showMessageDialog(this, "Producto agregado correctamente");
                LimpiarTable();
                LimpiarProductos();
                try {
                    ListarProductos();
                } catch (SQLException ex) {
                    System.out.println(""+ex.toString());
                }
                jtfCodigo.requestFocus();
            }
            else{
                JOptionPane.showMessageDialog(this, "Este producto ya esta registrado");
            }
            }
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void jcbBaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbBaseActionPerformed
        // TODO add your handling code here:
        if(jcbBase.isSelected())
        {
            jtfBase.setEnabled(true);
        }
        else{
            jtfBase.setEnabled(false);
        }
    }//GEN-LAST:event_jcbBaseActionPerformed

    private void jcbBaseStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jcbBaseStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbBaseStateChanged

    private void jtfBaseKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfBaseKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            btnAgregar.requestFocus();
        }
    }//GEN-LAST:event_jtfBaseKeyPressed

    private void jtfPrecioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfPrecioKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            jtfStockP.requestFocus();
            
        }
    }//GEN-LAST:event_jtfPrecioKeyPressed

    private void jcbUnidadKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jcbUnidadKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            jtfPrecio.requestFocus();
        }
    }//GEN-LAST:event_jcbUnidadKeyPressed

    private void jcbUnidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbUnidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbUnidadActionPerformed

    private void jtfDetalleKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfDetalleKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            jcbUnidad.requestFocus();
        }
    }//GEN-LAST:event_jtfDetalleKeyPressed

    private void jtfNombreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfNombreKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            jtfDetalle.requestFocus();
        }
    }//GEN-LAST:event_jtfNombreKeyPressed

    private void jtfCodigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfCodigoKeyTyped
        // TODO add your handling code here:

        jtfCodigo.addKeyListener(new KeyAdapter(){
            @Override
            public void keyReleased(KeyEvent ke) {
                trs.setRowFilter(RowFilter.regexFilter(jtfCodigo.getText(), 0));
               
            }
        });
        trs = new TableRowSorter(modelo);
        jtableP.setRowSorter(trs);
    }//GEN-LAST:event_jtfCodigoKeyTyped

    private void jtfCodigoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfCodigoKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            jtfNombre.requestFocus();
        }
    }//GEN-LAST:event_jtfCodigoKeyPressed

    private void jtfCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfCodigoActionPerformed

    private void jcbOpcionesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbOpcionesItemStateChanged
        // TODO add your handling code here:

        try{
            int n = jcbOpciones.getSelectedIndex();
            if(jcbOpciones.getSelectedIndex()!=0){
                if(pro.getUdm()==2){
                    jtfPrecioPV.setText(""+u.get(n).getPreciou());
                    codePV = u.get(n).getCdunidad();
                }
                if(pro.getUdm()==1){
                    jtfPrecioPV.setText(""+ d.get(n).getPrecio());
                    codePV = d.get(n).getCderivado();
                }
            }
            else{
                jtfPrecioPV.setText(""+pro.getPrecio());
                codePV = pro.getCd();
            }
            jtfCantidadPV.requestFocus();
        }
        catch(Exception ex){
           Logger.getLogger(""+ex);
        }
    }//GEN-LAST:event_jcbOpcionesItemStateChanged

    private void jtfTotalPVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfTotalPVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfTotalPVActionPerformed

    private void btnVenderPVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVenderPVActionPerformed
        // TODO add your handling code here:
        if(jtVenta.getRowCount()!=0){
               int pregunta = JOptionPane.showConfirmDialog(null, "Imprimir Ticket");
            if (pregunta==0) {
        Tickets();
        RegistrarVenta();
        RegistrarDetalleV();
        ActualizarStockV();
        LimpiarVenta();
        LimpiarTableV();
        JOptionPane.showMessageDialog(null, "Venta realizada con exito!");
            }
            else if (pregunta==1) {
        RegistrarVenta();
        RegistrarDetalleV();
        ActualizarStockV();
        LimpiarVenta();
        LimpiarTableV();
        JOptionPane.showMessageDialog(null, "Venta realizada con exito!");
            }

        }
        else{
        JOptionPane.showMessageDialog(null, "Ingrese productos a la tabla para vender");
        }
    }//GEN-LAST:event_btnVenderPVActionPerformed

    private void btnEliminarPVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarPVActionPerformed
        // TODO add your handling code here:
        tmv = (DefaultTableModel) jtVenta.getModel();
        try{
        tmv.removeRow(jtVenta.getSelectedRow());
        JOptionPane.showMessageDialog(null, "Producto eliminado");
        }
        catch(Exception e ){
        Logger.getLogger(""+e);
        }
        TotalV();
        jtfCodigoPV.requestFocus();
    }//GEN-LAST:event_btnEliminarPVActionPerformed

    private void btnAgregarPVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarPVActionPerformed
        // TODO add your handling code here:
        try{
        if(!jtfCantidadPV.getText().equals("")){
            String cod = jtfCodigoPV.getText();
            String nombre = jcbOpciones.getSelectedItem().toString();
            float cant = Float.parseFloat(jtfCantidadPV.getText());
            float precio = Float.parseFloat(jtfPrecioPV.getText());
            float total = precio * cant;
            itemv = itemv +1;
            tmv = (DefaultTableModel) jtVenta.getModel();
            for (int i = 0; i < jtVenta.getRowCount(); i++) {
                if (jtVenta.getValueAt(i, 0).equals(codePV)) {
                    JOptionPane.showMessageDialog(null, "El producto ya esta registrado");
                    LimpiarVenta();
                    TotalV();
                    jtfCodigoPV.requestFocus();
                    return;
                }
            }
            ArrayList lista = new ArrayList();
            lista.add(itemv);
            lista.add(codePV);
            lista.add(nombre);
            lista.add(cant);
            lista.add(precio);
            lista.add(total);
            Object[] o = new Object[5];
            o[0]= lista.get(1);
            o[1]= lista.get(2);
            o[2]= lista.get(3);
            o[3]= lista.get(4);
            o[4]= lista.get(5);
            tmv.addRow(o);
            jtVenta.setModel(tmv);
            LimpiarVenta();
            TotalV();
            jtfCodigoPV.requestFocus();
        }
        else{
            JOptionPane.showMessageDialog(null, "Ingresa la cantidad");
        }
        }
        catch(Exception e){
        JOptionPane.showMessageDialog(null, "Error al agregar producto");
        }
    }//GEN-LAST:event_btnAgregarPVActionPerformed

    private void jtfCantidadPVKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfCantidadPVKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            btnAgregarPV.doClick();
        }
    }//GEN-LAST:event_jtfCantidadPVKeyPressed

    private void jtfCantidadPVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfCantidadPVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfCantidadPVActionPerformed

    private void jtfCodigoPVKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfCodigoPVKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            if(!"".equals(jtfCodigoPV.getText())){
                String cod = jtfCodigoPV.getText();
                pro = pdb.BuscarPro(cod);
                der = pdb.BuscarDer(cod);
                uni = pdb.BuscarUni(cod);
                u = pdb.ConsultarUnidades(cod);
                d = pdb.ConsultarDerivados(cod);
                if (pro.getName() != null ) {
                    jtfPrecioPV.setText(""+pro.getPrecio());
                    jtfCantidadPV.requestFocus();
                    //Carga de combobox

                    jcbOpciones.addItem(""+pro.getName());
                    if (pro.getUdm()==2) {
                        for (int i = 1; i < u.size(); i++) {
                            jcbOpciones.addItem(""+u.get(i).getNunidad());
                            udmCaja = 2;
                            jtfCantidadPV.setText("1");
                        }
                    }
                    if (pro.getUdm()==1) {

                        for (int i = 1; i < d.size(); i++) {
                            jcbOpciones.addItem(""+d.get(i).getNderivado());
                            udmCaja = 1;
                        
                        }
                    }

                }
                else if (der.getNderivado() != null) {

                    jcbOpciones.addItem(""+der.getNderivado());
                    jtfCantidadPV.requestFocus();
                    jtfPrecioPV.setText(""+der.getPrecio());
                    codePV = der.getCderivado();
                    udmCaja = 1;
                }
                else if (uni.getNunidad() != null) {

                    System.out.println("Precio"+uni.getPreciou());
                    jtfCantidadPV.requestFocus();
                    jcbOpciones.addItem(""+uni.getNunidad());
                    jtfPrecioPV.setText(""+uni.getPreciou());
                    codePV = uni.getCdunidad();
                    udmCaja = 2;
                    jtfCantidadPV.setText("1");
                }
                else{
                    LimpiarVenta();
                    jtfCodigoPV.requestFocus();
                }
            }else{
                JOptionPane.showMessageDialog(null, "Ingrese el codigo de producto");
                jtfCodigoPV.requestFocus();

            }

        }
        if(evt.getKeyCode() == KeyEvent.VK_BACK_SPACE){
            LimpiarVenta();
        }
    }//GEN-LAST:event_jtfCodigoPVKeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        vista.Login ventana = new vista.Login();
        ventana.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnUnidadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUnidadesActionPerformed
        // TODO add your handling code here:
        cajas();
        jtp.setSelectedIndex(3);
        LimpiarTable();
        LimpiarUnidades();
        try {
            ListarUnidades();
        } catch (SQLException ex) {
            System.out.println(""+ex.toString());
        }
    }//GEN-LAST:event_btnUnidadesActionPerformed

    private void btnCombosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCombosActionPerformed
        cajas();
        LimpiarDerivados();
        LimpiarTable();
        try {
            // TODO add your handling code here:
            ListarDerivados();
        } catch (SQLException ex) {
            Logger.getLogger(sistema.class.getName()).log(Level.SEVERE, null, ex);
        }

        jtp.setSelectedIndex(2);
    }//GEN-LAST:event_btnCombosActionPerformed

    private void btnReportesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReportesActionPerformed
        // TODO add your handling code here:
        Date input = new Date();
        Instant instant = input.toInstant();
        jtp.setSelectedIndex(5);
        jtcDesde.setDate(Date.from(instant));
        jtcTill.setDate(Date.from(instant));
        LimpiarTable();
    }//GEN-LAST:event_btnReportesActionPerformed

    private void btnAdministrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdministrarActionPerformed
        // TODO add your handling code here:
        vista.Administracion ventana = new vista.Administracion();
        ventana.setVisible(true);
        this.dispose();
        jtp.setSelectedIndex(5);
    }//GEN-LAST:event_btnAdministrarActionPerformed

    private void btnComprasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnComprasActionPerformed
        // TODO add your handling code here:

        jtp.setSelectedIndex(4);

        LimpiarCompra();
    }//GEN-LAST:event_btnComprasActionPerformed

    private void btnVentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVentasActionPerformed
        // TODO add your handling code here:
        jtp.setSelectedIndex(0);
    }//GEN-LAST:event_btnVentasActionPerformed

    private void btnProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProductosActionPerformed
        // TODO add your handling code here

        jtp.setSelectedIndex(1);
        LimpiarProductos();
        LimpiarTable();
        try {
            ListarProductos();
        } catch (SQLException ex) {
            Logger.getLogger(sistema.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnProductosActionPerformed

    private void btnLimpiarDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarDActionPerformed
        // TODO add your handling code here:
        LimpiarDerivados();
    }//GEN-LAST:event_btnLimpiarDActionPerformed

    private void btnLimpiarUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarUActionPerformed
        // TODO add your handling code here:
        LimpiarUnidades();
    }//GEN-LAST:event_btnLimpiarUActionPerformed

    private void btnCodigoPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCodigoPActionPerformed
        // TODO add your handling code here:

        if(jtableP.getSelectedRowCount()==0){
        try{
         String d [] = new String[jtableP.getRowCount()];
            for (int i = 0; i < jtableP.getRowCount(); i++) {
                d[i] = jtableP.getValueAt(i, 0).toString();
            }
        Barras(jtableP.getRowCount(),d);
              JOptionPane.showMessageDialog(null, "Se ha creado el archivo con exito de todos los codigos");
        }
        catch(Exception e){
            System.out.println("Codigos P"+e);
        }
        }
        else{
              try{
         int d  = jtableP.getSelectedRowCount();
         int c [] = jtableP.getSelectedRows();
         String e [] = new String[d];
          for (int i = 0; i < d; i++) {
                e[i] = jtableP.getValueAt(c[i], 0).toString();
            }
        Barras(d,e);
        JOptionPane.showMessageDialog(null, "Se ha creado el archivo con exito de los codigos seleccionados");
        }
        catch(Exception e){
            System.out.println("COdigos P"+e);
        }
            
        }
    }//GEN-LAST:event_btnCodigoPActionPerformed

    private void btnCodigoGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCodigoGActionPerformed
        // TODO add your handling code here:
        
        if(jtableD.getSelectedRowCount()==0){
        try{
         String d [] = new String[jtableD.getRowCount()];
            for (int i = 0; i < jtableD.getRowCount(); i++) {
                d[i] = jtableD.getValueAt(i, 0).toString();
            }
        Barras(jtableD.getRowCount(),d);
        JOptionPane.showMessageDialog(null, "Se ha creado el archivo con exito de todos los codigos");
        }
        catch(Exception e){
            System.out.println("Codigos G"+e);
        }
        }
        else{
              try{
         int d  = jtableD.getSelectedRowCount();
         int c [] = jtableD.getSelectedRows();
         String e [] = new String[d];
          for (int i = 0; i < d; i++) {
                e[i] = jtableD.getValueAt(c[i], 0).toString();
            }
        Barras(d,e);
              JOptionPane.showMessageDialog(null, "Se ha creado el archivo con exito de los codigos seleccionados");
        }
        catch(Exception e){
            System.out.println("Codigos G"+e);
        }
            
        }
    }//GEN-LAST:event_btnCodigoGActionPerformed

    private void btnCodigoUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCodigoUActionPerformed
        // TODO add your handling code here:
             if(jtUnidades.getSelectedRowCount()==0){
        try{
         String d [] = new String[jtUnidades.getRowCount()];
            for (int i = 0; i < jtUnidades.getRowCount(); i++) {
                d[i] = jtUnidades.getValueAt(i, 0).toString();
            }
        Barras(jtUnidades.getRowCount(),d);
              JOptionPane.showMessageDialog(null, "Se ha creado el archivo con exito de todos los codigos");
        }
        catch(Exception e){
            System.out.println("Codigos U"+e);
        }
        }
        else{
              try{
         int d  = jtUnidades.getSelectedRowCount();
         int c [] = jtUnidades.getSelectedRows();
         String e [] = new String[d];
          for (int i = 0; i < d; i++) {
                e[i] = jtUnidades.getValueAt(c[i], 0).toString();
            }
        Barras(d,e);
        JOptionPane.showMessageDialog(null, "Se ha creado el archivo con exito de los codigos seleccionados");
        }
        catch(Exception e){
            System.out.println("Codigos "+e);
        }
            
        }
    }//GEN-LAST:event_btnCodigoUActionPerformed

    private void jtfCantidadPVKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfCantidadPVKeyTyped
        // TODO add your handling code here:
        if(udmCaja==2){
        char car = evt.getKeyChar();
        if((car<'0' || car>'9')){ 
            evt.consume();
        }
        }

        
        
    }//GEN-LAST:event_jtfCantidadPVKeyTyped

    private void jtfStockPKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfStockPKeyPressed
        // TODO add your handling code here:
           if(evt.getKeyCode() == KeyEvent.VK_ENTER){
           jtfPiezasP.requestFocus();
           }
    }//GEN-LAST:event_jtfStockPKeyPressed

    private void jtfPiezasPKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfPiezasPKeyPressed
        // TODO add your handling code here:
           if(evt.getKeyCode() == KeyEvent.VK_ENTER){
               btnAgregar.doClick();
               
           }
    }//GEN-LAST:event_jtfPiezasPKeyPressed

    private void jcbProductosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jcbProductosKeyPressed
        // TODO add your handling code here:
     
    }//GEN-LAST:event_jcbProductosKeyPressed

    private void jtfCodigoDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfCodigoDKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfCodigoDKeyReleased

    private void jtfCodigoDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfCodigoDKeyPressed
        // TODO add your handling code here:
           if(evt.getKeyCode() == KeyEvent.VK_ENTER){
               jtfNombreD.requestFocus();
           }
    }//GEN-LAST:event_jtfCodigoDKeyPressed

    private void jtfNombreDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfNombreDKeyPressed
        // TODO add your handling code here:
           if(evt.getKeyCode() == KeyEvent.VK_ENTER){
               jtfDetalleD.requestFocus();
           }
    }//GEN-LAST:event_jtfNombreDKeyPressed

    private void jtfDetalleDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfDetalleDKeyPressed
        // TODO add your handling code here:
           if(evt.getKeyCode() == KeyEvent.VK_ENTER){
               jtfPrecioD.requestFocus();
           }
    }//GEN-LAST:event_jtfDetalleDKeyPressed

    private void jtfPrecioDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfPrecioDKeyPressed
        // TODO add your handling code here:
           if(evt.getKeyCode() == KeyEvent.VK_ENTER){
               jcbProductos.requestFocus();
           }
    }//GEN-LAST:event_jtfPrecioDKeyPressed

    private void jcbProductosUKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jcbProductosUKeyPressed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_jcbProductosUKeyPressed

    private void jtfNombreUKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfNombreUKeyPressed
        // TODO add your handling code here:
           if(evt.getKeyCode() == KeyEvent.VK_ENTER){
               jtfDetalleU.requestFocus();
           }
    }//GEN-LAST:event_jtfNombreUKeyPressed

    private void jtfDetalleUKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfDetalleUKeyPressed
        // TODO add your handling code here:
           if(evt.getKeyCode() == KeyEvent.VK_ENTER){
               jtfPiezasU.requestFocus();
           }
    }//GEN-LAST:event_jtfDetalleUKeyPressed

    private void jtfPiezasUKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfPiezasUKeyPressed
        // TODO add your handling code here:
           if(evt.getKeyCode() == KeyEvent.VK_ENTER){
               jtfPrecioU.requestFocus();
           }
    }//GEN-LAST:event_jtfPiezasUKeyPressed

    private void jtfPrecioUKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfPrecioUKeyPressed
        // TODO add your handling code here:
           if(evt.getKeyCode() == KeyEvent.VK_ENTER){
               jcbProductosU.requestFocus();
           }
    }//GEN-LAST:event_jtfPrecioUKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(sistema.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(sistema.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(sistema.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(sistema.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new sistema().setVisible(true);
                
            }
        });
    }
    private static String rol(){
        String rol;
    if(database.rol==1){
        rol="Administrador";
        }
        else{
        rol="Empleado";
        }
    return rol;
    }
    private boolean Numeros(String base){
    try {
    float num = Float.parseFloat(base);
    return true;
    }    catch(Exception e){
    return false;
    }    
    }
    private void ListarProductos() throws SQLException{
    ArrayList<Productos> ListaP = pdb.ListarProductos();
    modelo = (DefaultTableModel) jtableP.getModel();
    Object[] ob = new Object[7];
        for (int i = 0; i < ListaP.size(); i++) {
            ob[0] = ListaP.get(i).getCd();
            ob[1] = ListaP.get(i).getName();
            ob[2] = ListaP.get(i).getDetalle();
            ob[3] = ListaP.get(i).getUdm();
            ob[4] = ListaP.get(i).getPrecio();
            ob[5] = ListaP.get(i).getStock();
            ob[6] = ListaP.get(i).getPiezas();
            modelo.addRow(ob);
        }
        jtableP.setModel(modelo);
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(modelo);
           jtableP.setRowSorter(sorter);
           
        List<SortKey> sortkeys = new ArrayList<>();
        sortkeys.add(new SortKey(1,SortOrder.ASCENDING));
        sorter.setSortKeys(sortkeys);
             
    }
    private void ListarVentas(String from, String till) throws SQLException{
    ArrayList<Venta> ListaV = vdb.ListarVentas(from, till);
    modelo = (DefaultTableModel) jtReportes.getModel();
    Object[] ob = new Object[8];
        for (int i = 0; i < ListaV.size(); i++) {
            ob[0] = ListaV.get(i).getCdventa();
            ob[1] = ListaV.get(i).getVendedor();
            ob[2] = ListaV.get(i).getFecha();
            ob[3] = ListaV.get(i).getTotal();
            modelo.addRow(ob);
        }
        jtReportes.setModel(modelo);
                TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(modelo);
           jtReportes.setRowSorter(sorter);
           
        List<SortKey> sortkeys = new ArrayList<>();
        sortkeys.add(new SortKey(2,SortOrder.ASCENDING));
        sorter.setSortKeys(sortkeys);
    }
    private void ListarCompras(String from, String till) throws SQLException{
    ArrayList<Compra> ListaC = cdb.ListarCompras(from, till);
    modelo = (DefaultTableModel) jtReportes.getModel();
    Object[] ob = new Object[8];
        for (int i = 0; i < ListaC.size(); i++) {
            ob[0] = ListaC.get(i).getCdcompra();
            ob[1] = ListaC.get(i).getVendedor();
            ob[2] = ListaC.get(i).getFecha();
            ob[3] = ListaC.get(i).getTotal();
            modelo.addRow(ob);
        }
        jtReportes.setModel(modelo);
                TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(modelo);
           jtReportes.setRowSorter(sorter);
           
        List<SortKey> sortkeys = new ArrayList<>();
        sortkeys.add(new SortKey(2,SortOrder.ASCENDING));
        sorter.setSortKeys(sortkeys);
    }
    private void ListarDerivados() throws SQLException{
    ArrayList<Derivados> ListaD = ddb.ListarProductosD();
    modelo = (DefaultTableModel) jtableD.getModel();
    Object[] ob = new Object[6];
        for (int i = 0; i < ListaD.size(); i++) {

            ob[0] = ListaD.get(i).getCderivado();
            ob[1] = ListaD.get(i).getNderivado();
            ob[2] = ListaD.get(i).getDetalled();
            ob[3] = ListaD.get(i).getPrecio();
            ob[4] = ListaD.get(i).getCd();
            ob[5] = ListaD.get(i).getNombre();
            modelo.addRow(ob);
        }
        jtableD.setModel(modelo);
                TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(modelo);
           jtableD.setRowSorter(sorter);
           
        List<SortKey> sortkeys = new ArrayList<>();
        sortkeys.add(new SortKey(1,SortOrder.ASCENDING));
        sorter.setSortKeys(sortkeys);
    }
    private void ListarUnidades() throws SQLException{
    ArrayList<Unidades> ListaU = udb.ListarProductosU();
    modelo = (DefaultTableModel) jtUnidades.getModel();
    Object[] ob = new Object[7];
        for (int i = 0; i < ListaU.size(); i++) {

            ob[0] = ListaU.get(i).getCdunidad();
            ob[1] = ListaU.get(i).getNunidad();
            ob[2] = ListaU.get(i).getDetalleu();
            ob[3] = ListaU.get(i).getPiezas();
            ob[4] = ListaU.get(i).getPreciou();
            ob[5] = ListaU.get(i).getCodigo();
            ob[6] = ListaU.get(i).getNombre();
            modelo.addRow(ob);
        }
        jtUnidades.setModel(modelo);
                TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(modelo);
           jtUnidades.setRowSorter(sorter);
           
        List<SortKey> sortkeys = new ArrayList<>();
        sortkeys.add(new SortKey(1,SortOrder.ASCENDING));
        sorter.setSortKeys(sortkeys);
    }
    private void LimpiarTable(){
        for (int i = 0; i < modelo.getRowCount(); i++) {
            modelo.removeRow(i);
            i=i-1;
        }
    }
    private void LimpiarTableC(){
    for (int i = 0; i < tmp.getRowCount(); i++) {
            tmp.removeRow(i);
            i=i-1;
        }
    }
    private void LimpiarTableV(){
    for (int i = 0; i < tmv.getRowCount(); i++) {
            tmv.removeRow(i);
            i=i-1;
        }
    }
    private void LimpiarProductos(){
    jtfCodigo.setText("");
    jtfNombre.setText(null);
    jtfDetalle.setText(null);
    jcbUnidad.setSelectedItem(null);
    jtfPrecio.setText(null);
    jtfBase.setText("1");
    jtfBase.setEnabled(false);
    jcbBase.setSelected(false);
    jtfStockP.setText("0");
    jtfPiezasP.setText("0");
    }
    private void LimpiarDerivados(){
    jcbProductos.setSelectedIndex(0);
    jtfCodigoD.setText("");
    jtfNombreD.setText("");
    jtfDetalleD.setText("");
    jtfPrecioD.setText("");
    }
    private void LimpiarUnidades(){
    jcbProductosU.setSelectedIndex(0);
    jtfCodigoU.setText("");
    jtfNombreU.setText("");
    jtfDetalleU.setText("");
    jtfPrecioU.setText("");
    jtfPiezasU.setText("");
     }    
    private void RegistrarCompra(){
        
     String vendedor = jlbUsuario.getText();
     Float totalC = Float.parseFloat(jtfTotalC.getText());
        c.setTotal(totalC);
        c.setVendedor(vendedor);
        cdb.registrarCompra(c);
    }
    private void RegistrarVenta(){
        
     String vendedor = jlbUsuario.getText();
     Float totalC = Float.parseFloat(jtfTotalPV.getText());
        v.setTotal(totalC);
        v.setVendedor(vendedor);
        vdb.registrarCompra(v);
    }
    private void Total(){
        totalpagar=0;
        int numFila = jtCompra.getRowCount();
        for (int i = 0; i < numFila; i++) {
            float cal = Float.parseFloat(""+jtCompra.getModel().getValueAt(i, 4));
            totalpagar = totalpagar+cal;
        }
        jtfTotalC.setText(""+String.format("%.2f",totalpagar));
    }
    private void TotalV(){
        totalventa=0;
        int numFila = jtVenta.getRowCount();
        for (int i = 0; i < numFila; i++) {
            float cal = Float.parseFloat(""+jtVenta.getModel().getValueAt(i, 4));
            totalventa = totalventa+cal;
        }
        jtfTotalPV.setText(""+String.format("%.2f",totalventa));
    }
      private void TotalR(){
        totalreporte=0;
        int numFila = jtReportes.getRowCount();
        for (int i = 0; i < numFila; i++) {
            float cal = Float.parseFloat(""+jtReportes.getModel().getValueAt(i, 3));
            totalreporte = totalreporte+cal;
        }
        jtfTotalR.setText(""+String.format("%.2f",totalreporte));
    }
    private void LimpiarCompra(){
    jtfNombreC.setText("");
    jtfCodigoC.setText("");
    jtfCantidadC.setText("");
    jtfPrecioC.setText("");
    jtfTotalC.setText("");
    }
    private void RegistrarDetalleC(){
        int id = cdb.idVenta();
        for (int i = 0; i < jtCompra.getRowCount(); i++) {
            String cod = jtCompra.getValueAt(i, 0).toString();
            Float cant = Float.parseFloat(jtCompra.getValueAt(i, 2).toString());
            Float pre = Float.parseFloat(jtCompra.getValueAt(i, 3).toString());
            Float sub = pre * cant;
            cd.setCdproducto(cod);
            cd.setCantidad(cant);
            cd.setPrecio(pre);
            cd.setSubtotal(sub);
            cd.setCdcompra(id);
            cdb.registarDetalleC(cd);
        }
    }
    private void RegistrarDetalleV(){
        int id = vdb.idVenta();
        for (int i = 0; i < jtVenta.getRowCount(); i++) {
            String cod = jtVenta.getValueAt(i, 0).toString();
            Float cant = Float.parseFloat(jtVenta.getValueAt(i, 2).toString());
            Float pre = Float.parseFloat(jtVenta.getValueAt(i, 3).toString());
            Float sub = pre * cant;
            vd.setCdproducto(cod);
            vd.setCantidad(cant);
            vd.setPrecio(pre);
            vd.setSubtotal(sub);
            vd.setCdventa(id);
            vdb.registarDetalleV(vd);
        }
    }
    private void ActualizarStock(){
        for (int i = 0; i < jtCompra.getRowCount(); i++) {
            String cod  = jtCompra.getValueAt(i, 0).toString();
            float cant = Float.parseFloat(jtCompra.getValueAt(i, 2).toString());
            pro = pdb.BuscarPro(cod);
            float actual = pro.getStock()+cant;
            cdb.actualizar(actual, cod);
        }
    }
      private void ActualizarStockV(){
        for (int i = 0; i < jtVenta.getRowCount(); i++) {
            String cdder;
            String cduni;
            String cdpro;
            String cod  = jtVenta.getValueAt(i, 0).toString();
            float cant = Float.parseFloat(jtVenta.getValueAt(i, 2).toString());
            pro = pdb.BuscarPro(cod);
            der = pdb.BuscarDer(cod);
            uni = pdb.BuscarUni(cod);
            cdder = der.getCd();
            cduni = uni.getCodigo();
            cdpro = pro.getCd();
            if(cdpro == null){
            float actual = pro.getStock()-cant;
            vdb.actualizar(actual, cdpro);
            }
            else if(cdder == null){
            pro = pdb.BuscarPro(cdder);
            float actual = pro.getStock()-cant;
            vdb.actualizar(actual, cdder);
            }
            else if(cduni == null){
            pro = pdb.BuscarPro(cduni);
            int c = Integer.parseInt(""+Math.round(cant));
            int actual = Integer.parseInt(""+(pro.getPiezas()-c));
            //vdb.actualizar(actual, cduni); //Actualizar piezas
            vdb.actualizarPiezas(actual, cduni);
            //Actualizacion de piezas y stock para unidades
            int exi = pro.getPiezas();
            int piezas = uni.getPiezas();
            float stock = pro.getStock();
            if(exi<0){
            int suma = piezas+exi;
            float resta = stock - 1;
            vdb.actualizarStock(resta, suma, cduni);
            }
            
            }
            
        }
    }
    private void cajas(){
        jcbProductos.removeAllItems();
        jcbProductosU.removeAllItems();
        codigosG.clear();
        codigosU.clear();
        pdb.ConsultarProductoG(jcbProductos);
        pdb.ConsultarCodigosG(codigosG);
        pdb.ConsultarProductoU(jcbProductosU);
        pdb.ConsultarCodigosU(codigosU);
        AutoCompleteDecorator.decorate(jcbProductos );
        AutoCompleteDecorator.decorate(jcbProductosU );
    }
    private void LimpiarVenta(){
        jcbOpciones.removeAllItems();
    jtfCodigoPV.setText("");
    jtfCantidadPV.setText("");
    jtfPrecioPV.setText("");
    jtfTotalPV.setText("");
        }
    
    private void Tickets(){
        int numFila = jtVenta.getRowCount();
        String fila="";
          for (int i = 0; i < numFila; i++) {
            String nom = ""+jtVenta.getModel().getValueAt(i, 1);
            String can = String.format("%.2f",jtVenta.getValueAt(i, 2));
            String sub = String.format("%.2f",jtVenta.getValueAt(i, 4));
            if(nom.length()>17){nom=nom.substring(0, 17);}
            fila += (String.format("%6s %-17s %5s \n",can, nom, sub));
              
        } 
          System.out.println(""+fila);
    String date = ""+jlbFecha.getText();
    String id = ""+vdb.idVenta();
    String caissier = ""+jlbUsuario.getText();
    String total = jtfTotalPV.getText();
    Ticket ticket = new Ticket(id, caissier, date, fila, total);
    ticket.print();
    }    
    private void Barras(int d,String c []){
        try{
    Document doc = new Document();
    PdfWriter pdf = PdfWriter.getInstance(doc, new FileOutputStream("codigos.pdf"));
    doc.open();

            for (int i = 0; i < d; i++) {
                    Barcode128 code = new Barcode128();
                 code.setCode(c[i]);   
                 Image img = code.createImageWithBarcode(pdf.getDirectContent(), BaseColor.BLACK, BaseColor.BLACK);
                 doc.add(img);
            }
            doc.close();

        }
        catch(DocumentException | FileNotFoundException e){
            System.out.println("Error codigos"+e);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntRegC;
    private javax.swing.JButton btnAdministrar;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnAgregarC;
    private javax.swing.JButton btnAgregarG;
    private javax.swing.JButton btnAgregarPV;
    private javax.swing.JButton btnAgregarU;
    private javax.swing.JButton btnBuscarVentas;
    private javax.swing.JButton btnCodigoG;
    private javax.swing.JButton btnCodigoP;
    private javax.swing.JButton btnCodigoU;
    private javax.swing.JButton btnCombos;
    private javax.swing.JButton btnCompras;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEditarG;
    private javax.swing.JButton btnEditarU;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnEliminarG;
    private javax.swing.JButton btnEliminarPV;
    private javax.swing.JButton btnEliminarU;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnLimpiarD;
    private javax.swing.JButton btnLimpiarU;
    private javax.swing.JButton btnProductos;
    private javax.swing.JButton btnReportes;
    private javax.swing.JButton btnUnidades;
    private javax.swing.JButton btnVenderPV;
    private javax.swing.JButton btnVentas;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JCheckBox jcbBase;
    private javax.swing.JComboBox<String> jcbOpciones;
    private javax.swing.JComboBox<String> jcbProductos;
    private javax.swing.JComboBox<String> jcbProductosU;
    private javax.swing.JComboBox<String> jcbTipo;
    private javax.swing.JComboBox<String> jcbUnidad;
    private javax.swing.JLabel jlbFecha;
    private javax.swing.JLabel jlbRol;
    private javax.swing.JLabel jlbSeccion1;
    private javax.swing.JLabel jlbUsuario;
    private javax.swing.JTable jtCompra;
    private javax.swing.JTable jtReportes;
    private javax.swing.JTable jtUnidades;
    private javax.swing.JTable jtVenta;
    private javax.swing.JTable jtableD;
    private javax.swing.JTable jtableP;
    private com.toedter.calendar.JDateChooser jtcDesde;
    private com.toedter.calendar.JDateChooser jtcTill;
    private javax.swing.JTextField jtfBase;
    private javax.swing.JTextField jtfCantidadC;
    private javax.swing.JTextField jtfCantidadPV;
    private javax.swing.JTextField jtfCodigo;
    private javax.swing.JTextField jtfCodigoC;
    private javax.swing.JTextField jtfCodigoD;
    private javax.swing.JTextField jtfCodigoPV;
    private javax.swing.JTextField jtfCodigoU;
    private javax.swing.JTextField jtfDetalle;
    private javax.swing.JTextField jtfDetalleD;
    private javax.swing.JTextField jtfDetalleU;
    private javax.swing.JButton jtfEliminarC;
    private javax.swing.JTextField jtfNombre;
    private javax.swing.JTextField jtfNombreC;
    private javax.swing.JTextField jtfNombreD;
    private javax.swing.JTextField jtfNombreU;
    private javax.swing.JTextField jtfPiezasP;
    private javax.swing.JTextField jtfPiezasU;
    private javax.swing.JTextField jtfPrecio;
    private javax.swing.JTextField jtfPrecioC;
    private javax.swing.JTextField jtfPrecioD;
    private javax.swing.JTextField jtfPrecioPV;
    private javax.swing.JTextField jtfPrecioU;
    private javax.swing.JTextField jtfStockP;
    private javax.swing.JTextField jtfTotalC;
    private javax.swing.JTextField jtfTotalPV;
    private javax.swing.JTextField jtfTotalR;
    private javax.swing.JTabbedPane jtp;
    // End of variables declaration//GEN-END:variables
}
